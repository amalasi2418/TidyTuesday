panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
plot
View(host_win)
View(total_wins)
library(tidyverse)
library(ggstream)
rent <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-07-05/rent.csv',skip_empty_rows = TRUE)
permits <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-07-05/sf_permits.csv',,skip_empty_rows = TRUE)
new_construction <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-07-05/new_construction.csv')
new_construction %>% ggplot(aes(year,totalproduction,fill=county)) +geom_stream()
permits <- permits %>% mutate(year = lubridate::year(completed_date))
permits[1:20000,] %>% ggplot(aes(year, estimated_cost,fill=existing_use)) +geom_stream()
View(permits)
library(tidyverse)
smol_grid <- long_grid(x =1:20, y = 1:20)
library(ambient)
smol_grid <- long_grid(x =1:20, y = 1:20)
ggplot(smol_grid) +
geom_point(aes(x, y)) +
theme_void() +
coord_equal()
smol_simplex <- smol_grid %>%
mutate(z = ambient::gen_simplex(x, y, seed = 1, frequency = .1))
smol_simplex <- smol_grid %>%
mutate(z = gen_simplex(x, y, seed = 1, frequency = .1))
smol_simplex <- smol_grid %>%
mutate(z = gen_simplex(x=x,y=y, seed = 1, frequency = .1))
smol_simplex |>
ggplot(aes(x, y, size = z)) +
geom_point(colour = "white", show.legend = FALSE) +
theme_void() +
coord_equal()
seq(1:10)
smol_grid <- long_grid(x = seq(1:20), y = seq(1:20))
ggplot(smol_grid) +
geom_point(aes(x, y)) +
theme_void() +
coord_equal()
smol_simplex <- smol_grid %>%
mutate(z = gen_simplex(x,y, seed = 1, frequency = .1))
smol_simplex <- smol_grid %>%
mutate(z = gen_simplex(x,y, seed = 1, frequency = .1))
library(dplyr)
smol_simplex <- smol_grid %>%
mutate(z = gen_simplex(x,y, seed = 1, frequency = .1))
library(purrr)
library(tibble)
library(ggplot2)
library(ggthemes)
smol_simplex <- smol_grid %>%
mutate(z = gen_simplex(x,y, seed = 1, frequency = .1))
z = gen_simplex(x,y, seed = 1, frequency = .1)
smol_grid %>% mutate(z = gen_simplex(x,y, seed = 1, frequency = .1))
x = seq(1:20)
y = seq(1:20)
z = gen_simplex(x,y, seed = 1, frequency = .1)
install.packages(c("ambient", "blogdown", "brew", "broom", "circlize", "colorRamps", "colorspace", "countrycode", "data.table", "dplyr", "extrafont", "flexdashboard", "fontawesome", "forecast", "ggdist", "ggforce", "ggfortify", "ggh4x", "ggimage", "ggplot2", "ggplotify", "ggpmisc", "ggpp", "ggspatial", "ggTimeSeries", "gifski", "googlesheets4"))
x = seq(1:20)
y = seq(1:20)
z = gen_simplex(x,y, seed = 1, frequency = .1)
install.packages("ambient")
library(tidyverse)
characters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/characters.csv')
install.packages("glue")
characters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/characters.csv')
install.packages("readr")
library(tidyverse)
characters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/characters.csv')
install.packages(c("antiword", "ape", "AsioHeaders", "assertive.properties", "backports", "BH", "BiocManager", "blob", "brio", "bslib", "cachem", "callr", "car", "carData", "caret", "checkmate", "class", "classInt", "clipr", "cluster", "colorspace", "commonmark", "conquer", "corpcor", "credentials", "crosstalk", "crul", "curl", "DataEditR", "DBI", "dbplyr", "deepnet", "deldir", "DEoptimR", "desc", "devtools", "diffobj", "digest", "DT", "e1071", "ellipse", "expss", "fansi", "farver", "fdrtool", "fields", "flexmix", "fmsb", "FNN", "fs", "furrr", "future", "gdata", "geojsonsf", "geosphere", "gert", "gimme", "git2r", "glmnet", "globals", "glue", "gower", "gplots", "gstat", "gtools", "h2o", "hardhat", "highcharter", "Hmisc", "htmlTable", "htmltools", "httpuv", "httr", "igraph", "imager", "ipred", "iterators", "jpeg", "jqr", "jsonlite", "keras", "kernlab", "laeken", "lares", "later", "latticeExtra", "lava", "lavaan", "leafem", "leaflet", "lme4", "lmtest", "locfit", "magick", "magrittr", "manipulateWidget", "maps", "maptools", "mapview", "matlib", "matrixStats", "mclust", "memoise", "mice", "MIIVsem", "mime", "misc3d", "mnormt", "MuMIn", "nloptr", "nnet", "opencv", "OpenImageR", "openssl", "openxlsx", "osmdata", "packrat", "padr", "pagedown", "pander", "parallelly", "parsnip", "pdftools", "pkgbuild", "pkgload", "plotly", "plotwidgets", "pls", "plyr", "polynom", "postcards", "pracma", "prettymapr", "pROC", "processx", "proj4", "protolite", "proxy", "ps", "psych", "qdapRegex", "qgraph", "qpdf", "qrcode", "Quandl", "quantmod", "R.methodsS3", "R.oo", "R.utils", "R6", "randomForest", "ranger", "raster", "rayrender", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readtext", "readxl", "recipes", "remotes", "renv", "reshape", "reticulate", "rex", "rgbif", "rgdal", "rgeos", "rgl", "rio", "rjson", "rlist", "robustbase", "rosm", "roxygen2", "rprojroot", "rsample", "rsconnect", "RSQLite", "rsvg", "Rttf2pt1", "rvcheck", "s2", "sass", "scico", "servr", "sessioninfo", "sf", "shiny", "shinyBS", "shinyjqui", "shinyjs", "showtext", "skimr", "slam", "slider", "sortable", "sp", "spacetime", "spam", "spatstat", "spatstat.core", "spatstat.data", "spatstat.geom", "spatstat.linnet", "spatstat.sparse", "spatstat.utils", "stars", "statmod", "stringi", "striprtf", "sysfonts", "systemfonts", "tensorflow", "terra", "tesseract", "testthat", "tidygraph", "tidyquant", "tidyselect", "tiff", "tigris", "timeDate", "timeSeries", "timetk", "timevis", "tinytex", "tseries", "TTR", "tzdb", "units", "usethis", "utf8", "uuid", "V8", "vcd", "VIM", "viridis", "vitae", "waldo", "websocket", "withr", "workflows", "xfun", "XML", "yaml", "yardstick", "zoo"))
library(glue)
install.packages("glue")
install.packages("glue")
install.packages("glue")
install.packages("glue")
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
text( x + ww, y, text, adj=c(0,0) )
}
plot(1:10, type='n')
text( 5, 3, "test", adj=c(0,0) )
squishtext( 5, 4, "test", squish=1 )
squishtext( 5, 5, "test", squish=0.8 )
squishtext( 5, 6, "test", squish=0.5 )
squishtext( 5, 7, "test", squish=1.2 )
squishtext( 5, 8, "test", squish=2 )
setwd("~/R/TidyTuesday/2022/2022-08-16_personality")
library(tidyverse)
library(ggforce)
library(ggrepel)
library(showtext)
#library(extrafont)
library(ggimage)
# text="BentonSans ExtraComp Black"
# text="BentonSans"
showtext_auto()
text="Oswald"
sysfonts::font_families_google()
sysfonts::font_add_google(text,text)
characters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/characters.csv') %>%
filter(uni_name=="Marvel Cinematic Universe")
personality <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/psych_stats.csv')%>%
filter(uni_name=="Marvel Cinematic Universe")
myers_briggs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/myers_briggs.csv') %>%
filter(uni_name=="Marvel Cinematic Universe")
myers_briggs %>%
select(char_name, myers_briggs,avg_match_perc)%>%
group_by(char_name) %>%
summarise(rating=max(avg_match_perc))
mb_marvel <- myers_briggs %>%
select(char_name, myers_briggs,avg_match_perc)%>%
group_by(char_name) %>%
top_n(1,avg_match_perc)
length =length(unique(mb_marvel$myers_briggs))
range_min = 50
range_max = 75
angle = seq(0, 2*pi, length = length+1)
r = 12*10
x = r*cos(angle[1:8])
y = r*sin(angle[1:8])
df = data.frame(x,y,
label=unique(mb_marvel$myers_briggs),
r=r,
x_pos=x*(r+14)/r,
y_pos=y*(r+14)/r)
circle = data.frame(x0=0,y0=0, rad=seq(2,12,length=6)*10)
delTheta = pi*5/180
mb_marvel_loc <- mb_marvel %>%
cbind(del_theta = c(-1.5*delTheta,1.5*delTheta,0,0,1.5*delTheta,-1.5*delTheta,1.5*delTheta,0,0,3*delTheta,0,-3*delTheta,-1.5*delTheta,0,0)) %>%
mutate(r_in = .4*avg_match_perc-18,
theta = case_when(myers_briggs=="ENTJ"~angle[1],
myers_briggs=="ENFP"~angle[2],
myers_briggs=="ESFJ"~angle[3],
myers_briggs=="ENFJ"~angle[4],
myers_briggs=="INTJ"~angle[5],
myers_briggs=="ENTP"~angle[6],
myers_briggs=="ISFJ"~angle[7],
TRUE~angle[8]),
x_in = r_in*cos(theta+del_theta)*10,
y_in = r_in*sin(theta+del_theta)*10,
image = case_when(char_name == "Tony Stark"~"images/Iron_Man.png",
char_name == "Thor"~"images/Thor.png",
char_name == "Thanos"~"images/Thanos.png",
char_name == "Gamora"~"images/Gamora.png",
char_name == "Loki"~"images/Loki.png",
char_name == "Peggy Carter"~"images/Agent_Carter.png",
char_name == "Hawkeye"~"images/Hawkeye.png",
char_name == "Nick Fury"~"images/Nick_Fury.png",
char_name == "Black Panther"~"images/Black_Panther.png",
char_name == "Bruce Banner"~"images/Bruce_Banner.png",
char_name == "Dr. Strange"~"images/Doctor_Strange.png",
char_name == "Captain America"~"images/Captain_America.png",
char_name == "Black Widow"~"images/Black_Widow.png",
char_name == "Captain Marvel"~"images/Captain_Marvel.png",
TRUE ~ "images/Peter_Jason_Quill.png"))
(framework <- df %>%
ggplot() +
geom_segment(aes(x=0,y=0,xend=x,yend=y), color="gray50")+
geom_text( aes(x=x_pos,y=y_pos, label=label),size=14,family = text, color="#FFFFFF")+
geom_circle(data=circle, aes(x0=x0,y0=y0,r=rad), color="gray50")+
geom_text( data = circle, aes(x=rad*cos(pi/2),y=rad*sin(pi/2)), label=seq(50,75,by=5),size=10,family = text, color="gray50")+
geom_text( data = circle, aes(x=rad*cos(-pi/2),y=rad*sin(-pi/2)), label=seq(50,75,by=5),size=10,family = text, color="gray50")+
coord_equal()+
theme_void())
bg = "#F0131E"
framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(title="MARVEL",
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
ggsave("marvel_personality_traits.png", last_plot(), width = 10, height=11, units = "in")
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
text( x + ww, y, text, adj=c(0,0) )
}
framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(.5,1,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
ggsave("marvel_personality_traits7.png", last_plot(), width = 10, height=11, units = "in")
plot(1:10, type='n')
text( "test", adj=c(0,0) )
text(0,0 "test", adj=c(0,0) )
text(0,0 ,"test", adj=c(0,0) )
plot(0:10, type='n')
text(0,0 ,"test", adj=c(0,0) )
text(0,1 ,"test", adj=c(0,0) )
text(1,0 ,"test", adj=c(0,0) )
squishtext( 5, 4, "test", squish=1 )
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
text( x + ww, y, text, adj=c(0,0) )
}
squishtext( 0,0, "test", squish=1 )
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
aa=text( x + ww, y, text, adj=c(0,0) )
print(aa)
}
squishtext( 0,0, "test", squish=.5 )
p=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(.5,1,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
text( x + ww, y, text, adj=c(0,0) )
}
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
text( x + ww, y, text, adj=c(0,0) )
}
p=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(.5,1,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
g <- ggplotGrob(p)
g <- ggplotGrob(p)
g$layout
p=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
ggsave("marvel_personality_traits7.png", p, width = 10, height=11, units = "in")
ggsave("marvel_personality_traits7.png", p, width = 10, height=11, units = "in")
p=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
text <- strsplit(text, '')[[1]]
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
text( x + ww, y, text, adj=c(0,0) )
}
p=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
#text( x + ww, y, text, adj=c(0,0) )
ww
}
Q
squishtext <- function(x,y, text, squish=1) {
text <- strsplit(text, '')[[1]]
w <- strwidth(text)
ww <- cumsum(c(0,head(w,-1)) * squish)
#text( x + ww, y, text, adj=c(0,0) )
ww
}
p=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
library(cowplot)
main_plot=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
main_plot=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
#title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
title = ggplot()+geom_image(x=0,y=0,image="/Marvel.png",size=.1)
title
title = ggplot()+geom_image(x=0,y=0,image="Marvel.png",size=.1)+ theme_void
title = ggplot()+geom_image(x=0,y=0,image="Marvel.png",size=.1)+ theme_void()
title
ggplot()+
geom_image(x=0,y=0,image="Marvel.png",size=.1)+
theme_void()
ggsave("marvel_personality_traits8.png", last_plot(), width = 10, height=11, units = "in")
title = ggplot()+
geom_image(x=10,y=10,image="Marvel.png",size=.1)+
theme_void()
ggsave("marvel_personality_traits8.png", last_plot(), width = 10, height=11, units = "in")
title = ggplot()+
geom_image(x=10,y=10,aes(image="Marvel.png"),size=.1)+
theme_void()
ggsave("marvel_personality_traits8.png", last_plot(), width = 10, height=11, units = "in")
title = ggplot()+
geom_image(x=10,y=10,aes(image=mb_marvel_loc$image[3]),size=.1)+
theme_void()
ggsave("marvel_personality_traits8.png", last_plot(), width = 10, height=11, units = "in")
ggdraw() +
draw_image("Marvel.png") +
draw_plot(my_plot)
ggdraw() +
draw_image("Marvel.png")+
draw_plot(my_plot)
ggdraw() +
draw_image("Marvel.png")
bg="white"
final_plot <- plot_grid(title,main_plot,ncol=1,rel_heights = c(.1,1)) +
theme(plot.background = element_rect(fill = bg, color = bg),
panel.background = element_rect(fill = bg, color = bg),
plot.margin = margin(c(20,10,20,10)))
main_plot=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
#title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
main_plot=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
#title = squishtext(1,20,"MARVEL",.5),
subtitle = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
main_plot=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
#title = squishtext(1,20,"MARVEL",.5),
title = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#FFFFFF"))
title = ggdraw() +
draw_image("Marvel.png")
bg="white"
final_plot <- plot_grid(title,main_plot,ncol=1,rel_heights = c(.1,1)) +
theme(plot.background = element_rect(fill = bg, color = bg),
panel.background = element_rect(fill = bg, color = bg),
plot.margin = margin(c(20,10,20,10)))
ggsave("marvel_personality_traits8.png", final_plot, width = 10, height=11, units = "in")
main_plot=framework +
#geom_text_repel( data=mb_marvel_loc,aes(x=x_in,y=y_in, label=toupper(char_name)),size=5, family = text,color="#FFFFFF") +
geom_image( data=mb_marvel_loc,aes(x=x_in,y=y_in, image=image),size=.09) +
labs(#title="MARVEL",
#title = squishtext(1,20,"MARVEL",.5),
title = "Myer-Briggs personality rating of Marvel Cinematic Universe characters",
caption = "Data: Open-Source Psychometrics Project | Images: marvelcinematicuniverse.fandom.com | Graphic: Abhinav Malasi")+
theme(plot.background = element_rect(fill=bg,color=bg),
panel.background = element_rect(fill=bg,color=bg),
plot.title = element_text(size=200,face="bold",hjust=.5),
plot.subtitle = element_text(size=60,hjust=.5),
plot.caption = element_text(size=30),
plot.margin = margin(t=10,b=10),
text=element_text(family = text, color="#141414"))
title = ggdraw() +
draw_image("Marvel.png")
bg="white"
final_plot <- plot_grid(title,main_plot,ncol=1,rel_heights = c(.1,1)) +
theme(plot.background = element_rect(fill = bg, color = bg),
panel.background = element_rect(fill = bg, color = bg),
plot.margin = margin(c(20,10,20,10)))
ggsave("marvel_personality_traits8.png", final_plot, width = 10, height=11, units = "in")
(framework <- df %>%
ggplot() +
geom_segment(aes(x=0,y=0,xend=x,yend=y), color="gray50")+
geom_text( aes(x=x_pos,y=y_pos, label=label),size=14,family = text, color="#141414")+
geom_circle(data=circle, aes(x0=x0,y0=y0,r=rad), color="gray50")+
geom_text( data = circle, aes(x=rad*cos(pi/2),y=rad*sin(pi/2)), label=seq(50,75,by=5),size=10,family = text, color="#141414")+
geom_text( data = circle, aes(x=rad*cos(-pi/2),y=rad*sin(-pi/2)), label=seq(50,75,by=5),size=10,family = text, color="#141414")+
coord_equal()+
theme_void())
(framework <- df %>%
ggplot() +
geom_segment(aes(x=0,y=0,xend=x,yend=y), color="gray50")+
geom_text( aes(x=x_pos,y=y_pos, label=label),size=14,family = text, color="#141414")+
geom_circle(data=circle, aes(x0=x0,y0=y0,r=rad), color="gray50")+
geom_text( data = circle, aes(x=rad*cos(pi/2),y=rad*sin(pi/2)), label=seq(50,75,by=5),size=10,family = text, color="#141414")+
geom_text( data = circle, aes(x=rad*cos(-pi/2),y=rad*sin(-pi/2)), label=seq(50,75,by=5),size=10,family = text, color="#141414")+
coord_equal()+
theme_void())
(framework <- df %>%
ggplot() +
geom_segment(aes(x=0,y=0,xend=x,yend=y), color="gray50")+
geom_text( aes(x=x_pos,y=y_pos, label=label),size=14,family = text, color="#FFFFFF")+
geom_circle(data=circle, aes(x0=x0,y0=y0,r=rad), color="gray50")+
geom_text( data = circle, aes(x=rad*cos(pi/2),y=rad*sin(pi/2)), label=seq(50,75,by=5),size=10,family = text, color="gray50")+
geom_text( data = circle, aes(x=rad*cos(-pi/2),y=rad*sin(-pi/2)), label=seq(50,75,by=5),size=10,family = text, color="gray50")+
coord_equal()+
theme_void())
